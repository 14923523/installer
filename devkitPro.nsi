; Script generated by the HM NIS Edit Script Wizard.

; HM NIS Edit Wizard helper defines
!define PRODUCT_NAME "devkitProUpdater"
!define PRODUCT_VERSION "1.0.0"
!define PRODUCT_PUBLISHER "devkitPro"
!define PRODUCT_WEB_SITE "http://devkitpro.sourceforge.net"
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
!define PRODUCT_UNINST_ROOT_KEY "HKLM"
!define PRODUCT_STARTMENU_REGVAL "NSIS:StartMenuDir"
!define BUILD "1"

SetCompressor lzma

; MUI 1.67 compatible ------
!include "MUI.nsh"
!include "zipdll.nsh"
!include "Sections.nsh"
!include "StrFunc.nsh"
${StrTok}
${StrRep}
${UnStrRep}

; MUI Settings
!define MUI_HEADERIMAGE
!define MUI_HEADERIMAGE_BITMAP "devkitPro.bmp" ; optional
!define MUI_ABORTWARNING "Are you sure you want to quit ${PRODUCT_NAME} ${PRODUCT_VERSION}?"
!define MUI_COMPONENTSPAGE_SMALLDESC

; Welcome page
!define MUI_WELCOMEPAGE_TITLE "Welcome to ${PRODUCT_NAME}\r\nVersion ${PRODUCT_VERSION}"
!define MUI_WELCOMEPAGE_TEXT "${PRODUCT_NAME} automates the process of downloading, installing, and uninstalling devkitPro Components.\r\n\nClick Next to continue."
!insertmacro MUI_PAGE_WELCOME
Page custom ChooseMirrorPage

; Components page
!define MUI_PAGE_HEADER_SUBTEXT "Choose the devkitPro components you would like to install."
!insertmacro MUI_PAGE_COMPONENTS

; Directory page
!define MUI_PAGE_HEADER_SUBTEXT "Choose the folder in which to install devkitPro."
!define MUI_DIRECTORYPAGE_TEXT_TOP "${PRODUCT_NAME} will install devkitPro components in the following directory. To install in a different folder click Browse and select another folder. Click Next to continue."
!define MUI_PAGE_CUSTOMFUNCTION_PRE AbortPage
!insertmacro MUI_PAGE_DIRECTORY

; Start menu page
var ICONS_GROUP
!define MUI_STARTMENUPAGE_NODISABLE
!define MUI_STARTMENUPAGE_DEFAULTFOLDER "devkitPro"
!define MUI_STARTMENUPAGE_REGISTRY_ROOT "${PRODUCT_UNINST_ROOT_KEY}"
!define MUI_STARTMENUPAGE_REGISTRY_KEY "${PRODUCT_UNINST_KEY}"
!define MUI_STARTMENUPAGE_REGISTRY_VALUENAME "${PRODUCT_STARTMENU_REGVAL}"
!define MUI_PAGE_CUSTOMFUNCTION_PRE AbortPage
!insertmacro MUI_PAGE_STARTMENU Application $ICONS_GROUP

; Instfiles page
!define MUI_PAGE_HEADER_SUBTEXT "Please wait while ${PRODUCT_NAME} downloads and installs the components you selected."
!define MUI_INSTFILESPAGE_ABORTHEADER_TEXT "Installation Aborted"
!define MUI_INSTFILESPAGE_ABORTHEADER_SUBTEXT "The installation was not completed successfully."
!insertmacro MUI_PAGE_INSTFILES

; Finish page
!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
!insertmacro MUI_UNPAGE_INSTFILES

; Language files
!insertmacro MUI_LANGUAGE "English"

; Reserve files
!insertmacro MUI_RESERVEFILE_INSTALLOPTIONS

; MUI end ------

Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"
Caption "${PRODUCT_NAME} ${PRODUCT_VERSION}"
OutFile "${PRODUCT_NAME}-${PRODUCT_VERSION}.exe"
InstallDir "c:\devkitPro"
ShowInstDetails show
ShowUnInstDetails show

var MirrorName
var MirrorHost
var MirrorURL
var Install
var MSYS
var DEVKITARM
var DEVKITPPC
var DEVKITPSP
var LIBGBA
var LIBNDS
var LIBMIRKO
var PNOTEPAD
var INSIGHT

Section "msys 1.0.10" SecMsys
  SectionIn RO
SectionEnd

SectionGroup devkitARM SecdevkitARM
	; Application
	Section "devkitARM" SecdkARM
	SectionEnd

	Section "libgba" Seclibgba
	SectionEnd

	Section "libmirko" Seclibmirko
	SectionEnd

	Section "libnds" Seclibnds
	SectionEnd

SectionGroupEnd

Section "devkitPPC" SecdevkitPPC
SectionEnd

Section "devkitPSP" SecdevkitPSP
SectionEnd

Section "Programmer's Notepad" Pnotepad
SectionEnd

Section "Insight" Secinsight
SectionEnd

var BASEDIR
Section -installComponents

  StrCpy $R0 $INSTDIR 1
  StrLen $0 $INSTDIR
  IntOp $0 $0 - 2
  
  StrCpy $R1 $INSTDIR $0 2
  ${StrRep} $R1 $R1 "\" "/"
  StrCpy $BASEDIR /$R0$R1


  push ${SecMsys}
  push $MSYS
  push $MirrorURL/devkitpro
  Call DownloadIfNeeded

  push ${SecdkARM}
  push $DEVKITARM
  push $MirrorURL/devkitpro
  Call DownloadIfNeeded

  push ${SecdevkitPPC}
  push $DEVKITPPC
  push $MirrorURL/devkitpro
  Call DownloadIfNeeded

  push ${SecdevkitPSP}
  push $DEVKITPSP
  push $MirrorURL/devkitpro
  Call DownloadIfNeeded

  push ${Seclibgba}
  push $LIBGBA
  push $MirrorURL/devkitpro
  Call DownloadIfNeeded

  push ${Seclibnds}
  push $LIBNDS
  push $MirrorURL/devkitpro
  Call DownloadIfNeeded

  push ${Seclibmirko}
  push $LIBMIRKO
  push $MirrorURL/devkitpro
  Call DownloadIfNeeded

  push ${pnotepad}
  push $PNOTEPAD
  push $MirrorURL/pnotepad
  Call DownloadIfNeeded

  push ${Secinsight}
  push $INSIGHT
  push $MirrorURL/devkitpro
  Call DownloadIfNeeded

  IntCmp $Install 1 +1 SkipInstall SkipInstall

  !insertmacro SectionFlagIsSet ${SecMsys} ${SF_SELECTED} install_Msys SkipMsys

install_Msys:
  ExecWait '"$EXEDIR\$MSYS" -y -o$INSTDIR'

SkipMsys:
  push ${SecdkARM}
  push "DEVKITARM"
  push $DEVKITARM
  push "$BASEDIR/devkitARM"
  call ExtractToolChain

  push ${SecdevkitPPC}
  push "DEVKITPPC"
  push $DEVKITPPC
  push "$BASEDIR/devkitPPC"
  call ExtractToolChain

  push ${SecdevkitPSP}
  push "DEVKITPSP"
  push $DEVKITPSP
  push "$BASEDIR/devkitPSP"
  call ExtractToolChain

  push ${Seclibgba}
  push "libgba"
  push $LIBGBA
  call ExtractLib
  
  push ${Seclibnds}
  push "libnds"
  push $LIBNDS
  call ExtractLib

  push ${Seclibmirko}
  push "libmirko"
  push $LIBMIRKO
  call ExtractLib

  !insertmacro SectionFlagIsSet ${Secinsight} ${SF_SELECTED} +1 SkipInsight

  ExecWait '"$EXEDIR/$INSIGHT" -y -o$INSTDIR'

SkipInsight:
  SectionGetFlags ${Pnotepad} $R0
  IntOp $R0 $R0 & ${SF_SELECTED}
  IntCmp $R0 ${SF_SELECTED} +1 SkipPnotepad

  ZipDLL::extractall $EXEDIR/$PNOTEPAD "$INSTDIR/Programmers Notepad"

SkipPnotepad:

  !insertmacro MUI_STARTMENU_WRITE_BEGIN Application
  SetShellVarContext all ; Put stuff in All Users
  SetOutPath $INSTDIR
  WriteIniStr "$INSTDIR\devkitPro.url" "InternetShortcut" "URL" "${PRODUCT_WEB_SITE}"
  CreateDirectory "$SMPROGRAMS\$ICONS_GROUP"
  CreateShortCut "$SMPROGRAMS\$ICONS_GROUP\devkitpro.lnk" "$INSTDIR\devkitPro.url"
  CreateShortCut "$SMPROGRAMS\$ICONS_GROUP\Uninstall.lnk" "$INSTDIR\uninst.exe"
  SetOutPath $INSTDIR\msys\bin
  CreateShortCut "$SMPROGRAMS\$ICONS_GROUP\MSys.lnk" "$INSTDIR\msys\msys.bat" "-norxvt" "$INSTDIR\msys\m.ico"
  !insertmacro MUI_STARTMENU_WRITE_END
  WriteUninstaller "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayName" "$(^Name)"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString" "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Publisher" "${PRODUCT_PUBLISHER}"

  WriteRegStr HKLM "System\CurrentControlSet\Control\Session Manager\Environment" "DEVKITPRO" "$BASEDIR"
  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 "STR:Environment" /TIMEOUT=5000

  ReadRegStr $1 HKLM "System\CurrentControlSet\Control\Session Manager\Environment" "PATH"
  ; remove it to avoid multiple paths with separate installs
  ${StrRep} $1 $1 "$INSTDIR\msys\bin;" ""
  StrCpy $1 $INSTDIR\msys\bin;$1
  WriteRegExpandStr HKLM "System\CurrentControlSet\Control\Session Manager\Environment" "PATH" $1
  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 "STR:Environment" /TIMEOUT=5000

SkipInstall:

SectionEnd

Section Uninstall
  SetShellVarContext all ; remove stuff from All Users
  !insertmacro MUI_STARTMENU_GETFOLDER "Application" $ICONS_GROUP
  RMDir /r "$SMPROGRAMS\$ICONS_GROUP"
  RMDir /r $INSTDIR

  ReadRegStr $1 HKLM "System\CurrentControlSet\Control\Session Manager\Environment" "PATH"
  ${UnStrRep} $1 $1 "$INSTDIR\msys\bin;" ""
  WriteRegExpandStr HKLM "System\CurrentControlSet\Control\Session Manager\Environment" "PATH" $1
  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 "STR:Environment" /TIMEOUT=5000

  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}"

  SetAutoClose true
SectionEnd

; Section descriptions
!insertmacro MUI_FUNCTION_DESCRIPTION_BEGIN
  !insertmacro MUI_DESCRIPTION_TEXT ${SecMsys} "unix style tools for windows"
  !insertmacro MUI_DESCRIPTION_TEXT ${SecdevkitARM} "toolchain for ARM platforms"
  !insertmacro MUI_DESCRIPTION_TEXT ${SecdkARM} "toolchain for ARM platforms"
  !insertmacro MUI_DESCRIPTION_TEXT ${SecdevkitPPC} "toolchain for powerpc platforms"
  !insertmacro MUI_DESCRIPTION_TEXT ${SecdevkitPSP} "toolchain for psp"
  !insertmacro MUI_DESCRIPTION_TEXT ${Pnotepad} "a programmer's editor"
  !insertmacro MUI_DESCRIPTION_TEXT ${Seclibgba} "Nintendo GBA development library"
  !insertmacro MUI_DESCRIPTION_TEXT ${Seclibmirko} "Gamepark GP32 development library"
  !insertmacro MUI_DESCRIPTION_TEXT ${Seclibnds} "Nintendo DS development library"
  !insertmacro MUI_DESCRIPTION_TEXT ${Secinsight} "GUI debugger"
!insertmacro MUI_FUNCTION_DESCRIPTION_END

;-----------------------------------------------------------------------------------------------------------------------
Function .onInit
;-----------------------------------------------------------------------------------------------------------------------
  ifFileExists $EXEDIR\$R1 skipextract
  ; extract built in ini file
  File /oname=$EXEDIR\devkitProUpdate.ini INIfiles\devkitProUpdate.ini

skipextract:
  ; save the current ini file in case download fails
  Rename $EXEDIR\devkitProUpdate.ini $EXEDIR\devkitProUpdate.ini.old
  ; Quietly download the latest devkitProUpdate.ini file
  NSISdl::download_quiet "http://devkitpro.sourceforge.net/devkitProUpdate.ini" "$EXEDIR\devkitProUpdate.ini"

  Pop $0
  StrCmp $0 "success" gotINI

  ; download failed so retrieve old file
  Rename $EXEDIR\devkitProUpdate.ini.old $EXEDIR\devkitProUpdate.ini

gotINI:
  ; Read MozUpdate build info from INI file
  ReadINIStr $R0 "$EXEDIR\devkitProUpdate.ini" "devkitProUpdate" "Build"
  IntCmp ${BUILD} $R0 Finish newVersion Finish

  newVersion:
    MessageBox MB_YESNO|MB_ICONINFORMATION|MB_DEFBUTTON1 "A newer version of devkitProUpdater is available. Would you like to upgrade now?" IDYES upgradeMe IDNO Finish

  upgradeMe:
    Call UpgradedevkitProUpdate
  Finish:

  ReadINIStr $R0 "$EXEDIR\devkitProUpdate.ini" "msys" "Size"
  ReadINIStr $MSYS "$EXEDIR\devkitProUpdate.ini" "msys" "File"
  SectionSetSize ${SecMsys} $R0
  ReadINIStr $R0 "$EXEDIR\devkitProUpdate.ini" "devkitARM" "Size"
  ReadINIStr $DEVKITARM "$EXEDIR\devkitProUpdate.ini" "devkitARM" "File"
  SectionSetSize ${SecdkARM} $R0
  ReadINIStr $R0 "$EXEDIR\devkitProUpdate.ini" "devkitPPC" "Size"
  ReadINIStr $DEVKITPPC "$EXEDIR\devkitProUpdate.ini" "devkitPPC" "File"
  SectionSetSize ${SecdevkitPPC} $R0
  ReadINIStr $R0 "$EXEDIR\devkitProUpdate.ini" "devkitPSP" "Size"
  ReadINIStr $DEVKITPSP "$EXEDIR\devkitProUpdate.ini" "devkitPSP" "File"
  SectionSetSize ${SecdevkitPSP} $R0
  ReadINIStr $R0 "$EXEDIR\devkitProUpdate.ini" "libgba" "Size"
  ReadINIStr $LIBGBA "$EXEDIR\devkitProUpdate.ini" "libgba" "File"
  SectionSetSize ${Seclibgba} $R0
  ReadINIStr $R0 "$EXEDIR\devkitProUpdate.ini" "libnds" "Size"
  ReadINIStr $LIBNDS "$EXEDIR\devkitProUpdate.ini" "libnds" "File"
  SectionSetSize ${Seclibnds} $R0
  ReadINIStr $R0 "$EXEDIR\devkitProUpdate.ini" "libmirko" "Size"
  ReadINIStr $LIBMIRKO "$EXEDIR\devkitProUpdate.ini" "libmirko" "File"
  SectionSetSize ${Seclibmirko} $R0
  ReadINIStr $R0 "$EXEDIR\devkitProUpdate.ini" "pnotepad" "Size"
  ReadINIStr $PNOTEPAD "$EXEDIR\devkitProUpdate.ini" "pnotepad" "File"
  SectionSetSize ${Pnotepad} $R0
  ReadINIStr $R0 "$EXEDIR\devkitProUpdate.ini" "insight" "Size"
  ReadINIStr $INSIGHT "$EXEDIR\devkitProUpdate.ini" "insight" "File"
  SectionSetSize ${Secinsight} $R0

  !insertmacro MUI_INSTALLOPTIONS_EXTRACT_AS "Dialogs\PickMirror.ini" "PickMirror.ini"

FunctionEnd

;-----------------------------------------------------------------------------------------------------------------------
Function .onVerifyInstDir
;-----------------------------------------------------------------------------------------------------------------------
  StrCpy $R0 $INSTDIR 1 1
;  IfFileExists $INSTDIR\Winamp.exe PathGood
;    Abort ;
;PathGood:
FunctionEnd

;-----------------------------------------------------------------------------------------------------------------------
Function un.onUninstSuccess
;-----------------------------------------------------------------------------------------------------------------------
  HideWindow
  MessageBox MB_ICONINFORMATION|MB_OK "devkitPro was successfully removed from your computer."
FunctionEnd

;-----------------------------------------------------------------------------------------------------------------------
Function un.onInit
;-----------------------------------------------------------------------------------------------------------------------
  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "Are you sure you want to completely remove devkitPro and all of its components?" IDYES +2
  Abort
FunctionEnd


;-----------------------------------------------------------------------------------------------------------------------
Function UpgradedevkitProUpdate
;-----------------------------------------------------------------------------------------------------------------------
  ReadINIStr $R0 "$EXEDIR\devkitProUpdate.ini" "devkitProUpdate" "URL"
  ReadINIStr $R1 "$EXEDIR\devkitProUpdate.ini" "devkitProUpdate" "Filename"

  DetailPrint "Downloading new version of devkitProUpdater..."
  NSISdl::download $R0 "$EXEDIR\$R1"
  StrCmp $0 success success
    ; Failure
    SetDetailsView show
    DetailPrint "Download failed: $0"
    Abort

  success:
    MessageBox MB_YESNO|MB_ICONQUESTION "Would you like to run the new version of devkitProUpdater now?" IDYES runNew
    return

  runNew:
    Exec "$EXEDIR\$R1"
    Quit
FunctionEnd

;-----------------------------------------------------------------------------------------------------------------------
Function AbortPage
;-----------------------------------------------------------------------------------------------------------------------

  IntCmp $Install 1 ShowPage +1 +1
    Abort
ShowPage:
FunctionEnd

;-----------------------------------------------------------------------------------------------------------------------
Function DownloadIfNeeded
;-----------------------------------------------------------------------------------------------------------------------
  pop $R0  ; URL
  pop $R1  ; Filename
  pop $R3  ; section flags

  SectionGetFlags $R3 $0
  IntOp $0 $0 & ${SF_SELECTED}
  IntCmp $0 ${SF_SELECTED} +1 SkipDL

  ifFileExists $EXEDIR\$R1 FileFound

  nsisdl::download $R0/$R1 $EXEDIR\$R1
  Pop $0
  StrCmp $0 success FileFound
  Abort "Could not download $R1!"
SkipDL:
FileFound:
FunctionEnd

var LIB
var FOLDER


;-----------------------------------------------------------------------------------------------------------------------
Function ExtractToolChain
;-----------------------------------------------------------------------------------------------------------------------
  pop $R3  ; path
  pop $R2  ; 7zip sfx
  pop $R1  ; env variable
  pop $R0  ; section flags

  SectionGetFlags $R0 $0
  IntOp $0 $0 & ${SF_SELECTED}
  IntCmp $0 ${SF_SELECTED} +1 SkipExtract

  nsExec::ExecToLog '"$EXEDIR\$R2" -y -o$INSTDIR'

  WriteRegStr HKLM "System\CurrentControlSet\Control\Session Manager\Environment" $R1 $R3
  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 "STR:Environment" /TIMEOUT=5000

SkipExtract:

FunctionEnd

;-----------------------------------------------------------------------------------------------------------------------
Function ExtractLib
;-----------------------------------------------------------------------------------------------------------------------
  pop $LIB
  pop $FOLDER
  pop $R0  ; section flags

  SectionGetFlags $R0 $0
  IntOp $0 $0 & ${SF_SELECTED}
  IntCmp $0 ${SF_SELECTED} +1 SkipExtract

  nsExec::ExecToLog '"$INSTDIR\msys\bin\bzip2" -k -d $LIB'
  pop $0 # return value/error/timeout
  CreateDirectory "$INSTDIR\$FOLDER"

  StrLen $R0 $LIB
  IntOp $R0 $R0 - 4
  StrCpy $R1 $LIB $R0

  Rename $R1 $INSTDIR\$FOLDER\$R1
  SetOutPath $INSTDIR\$FOLDER
  nsExec::ExecToLog '"$INSTDIR\msys\bin\tar" -xvf $R1'
  Delete $INSTDIR\$R1

  SetOutPath $EXEDIR

SkipExtract:

FunctionEnd

;-----------------------------------------------------------------------------------------------------------------------
; faking an array using separators
;-----------------------------------------------------------------------------------------------------------------------
!define hosts "jaist|keihanna|nchc|puzzle|heanet|mesh|kent|switch|citkit|ovh|peterhost|internap|umn|easynews|ufpr"
;-----------------------------------------------------------------------------------------------------------------------
Function ChooseMirrorPage
;-----------------------------------------------------------------------------------------------------------------------
  ; Display the page.
  !insertmacro MUI_INSTALLOPTIONS_DISPLAY "PickMirror.ini"
  ; Get the user entered values.
  !insertmacro MUI_INSTALLOPTIONS_READ $MirrorName "PickMirror.ini" "Field 4" "State"
  !insertmacro MUI_INSTALLOPTIONS_READ $Install "PickMirror.ini" "Field 2" "State"

  ; first two digits of the field are an array index
  StrCpy $0 $MirrorName 2
  IntOp $0 $0 - 1
  
  ${StrTok} $MirrorHost ${hosts} "|" $0 0
  StrCpy $MirrorURL "http://$MirrorHost.dl.sourceforge.net/sourceforge"
FunctionEnd
